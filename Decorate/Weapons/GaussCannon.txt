ACTOR GaussCannonSelected : EOA_Token{}
ACTOR GaussCooldownCounter : EOA_Token{Inventory.MaxAmount 56}
ACTOR GaussCannonSoundCounter : EOA_Token{Inventory.MaxAmount 75}
ACTOR GaussCannonCharged : EOA_Token{}

//Precision Bolt - Zoom in and fire more powerful shots.
ACTOR PrecisionBolt : EOA_Token{}
ACTOR PrecisionBoltSelected : EOA_Token{}
ACTOR EnergyEfficient : EOA_Token{} //Faster Charge Rate.
ACTOR GCNLightWeight : EOA_Token{} //Move at full speed while zoomed in.
ACTOR MC_VolatileDischarge : EOA_Token{} //Get 5 headshot kills on Hell Knights with the Precision Bolt.
ACTOR VolatileDischarge : EOA_Token{} //Mastery Upgrade - Enemies killed by the Precision Bolt will explode violently, damaging nearby enemies.

ACTOR PrecisionBoltReady : EOA_Token{}
ACTOR PrecisionBoltChargeCounter : EOA_Token{Inventory.MaxAmount 105}
ACTOR VolatileDischargeMasteryCounter : EOA_Token{Inventory.MaxAmount 5}

//Siege Mode (Gauss Cannon) - Charge a powerful, penetrating shot.  Movement is disabled during this time.
ACTOR SiegeMode : EOA_Token{}
ACTOR SiegeModeSelected : EOA_Token{}
ACTOR OuterBeam : EOA_Token{} //Siege Blasts now have an additional outer area effect.
ACTOR ReducedChargeTime : EOA_Token{} //As it says on the label...
ACTOR MC_MobileSiege : EOA_Token{} //Kill multiple enemies with one Siege Blast 10 times.
ACTOR MobileSiege : EOA_Token{} //Mastery Upgrade - Movement is enabled while in Siege Mode (half speed).

ACTOR SiegeModeReady : EOA_Token{}
ACTOR SiegeModeChargeCounter : EOA_Token{Inventory.MaxAmount 70}
ACTOR MobileSiegeKillCounter : EOA_Token{Inventory.MaxAmount 3} 
ACTOR MobileSiegeMasteryCounter : EOA_Token{Inventory.MaxAmount 10}

ACTOR DestroyarBlade //Sprite modified from Guncaster.
{
	Projectile
	Renderstyle "Add"
	Alpha 0.99
	Scale 0.6
	+FLATSPRITE
	+NOINTERACTION
	+DONTBLAST
	+DONTTHRUST
	States
	{
	Spawn:
		DBLD A 1 NoDelay Bright
		{
			A_FadeOut(0.10);
			A_SetScale(ScaleX + 0.4);
		}
		Wait
	}
}

ACTOR GCNMods : EOA_Manipulator
{
	States
	{
	Pickup:
		TNT1 A 0
		{
			A_GiveInventory("PrecisionBolt");
			A_GiveInventory("EnergyEfficient");
			A_GiveInventory("GCNLightWeight");
			A_GiveInventory("SiegeMode");
			A_GiveInventory("OuterBeam");
			A_GiveInventory("ReducedChargeTime");
		}
		Stop
	}
}

ACTOR EOA_GaussCannon : EOA_Weapon 20007
{
	Inventory.Icon "ICONGCN"
	Weapon.AmmoType "EOA_CellAmmo"
	Weapon.AmmoUse 15
	Weapon.AmmoGive 120
	EOA_BaseWeapon.MeleeTics 32
	Inventory.PickupMessage "Gauss Cannon"
	Tag "Gauss Cannon"
	+BFG
	+SEMIAUTO
	//+NOAUTOFIRE //{DoomKrakken]: This way you can activate the mods normally. :)
	States
	{
	Spawn:
		GAUS A -1
		Stop
	Select:
		TNT1 A 0 
		{
			A_Overlay(-2, "GaussHandler");
			SetPlayerProperty(0, 1, PROP_INSTANTWEAPONSWITCH);
			A_GiveInventory("GaussCannonSelected");
			ACS_NamedExecuteAlways("GCNReticle", 0);
			A_SetCrosshair(99);
		}
		GCPI A 0 A_JumpIfInventory("PrecisionBoltSelected", 1, 3)
		GCSI A 0 A_JumpIfInventory("SiegeModeSelected", 1, 2)
		GCNI A 0
		"####" A 1 A_Raise(60)
		Wait
	Deselect:
		TNT1 A 0 
		{
			A_Overlay(-2, "Null");
			A_TakeInventory("GaussCooldownCounter");
			If (CountInv("PrecisionBoltReady"))
			{
				A_WeaponOffset(0, 32);
				A_ZoomFactor;
				//A_SetSpeed(1);
				A_TakeInventory("PrecisionBoltReady");
				A_TakeInventory("PrecisionBoltChargeCounter");
				A_TakeInventory("GaussCannonSoundCounter");
				A_SpawnNoiseMaker("Precision/ZoomOut", 5);
				A_SpawnPersistentNoiseMaker(1, "", 6);
				A_SpawnPersistentNoiseMaker(1, "Precision/End", 7);
			}
			If (CountInv("SiegeModeReady"))
			{
				A_ZoomFactor;
				//A_SetSpeed(1);
				SetPlayerProperty(0, 0, PROP_FROZEN);
				A_TakeInventory("SiegeModeReady");
				A_TakeInventory("SiegeModeChargeCounter");
				A_SpawnPersistentNoiseMaker(1, "Siege/Close", 7, 0.25);
				A_DestroyPersistentNoiseMaker(1);
			}
			A_TakeInventory("GaussCannonSelected");
			SetPlayerProperty(0, 0, PROP_INSTANTWEAPONSWITCH);
		}
		TNT1 A 4 A_SetTics(4 * !CountInv("Adept") * !CountInv("PowerBerserk"))
		GCPI A 0 A_JumpIfInventory("PrecisionBoltSelected", 1, 3)
		GCSI A 0 A_JumpIfInventory("SiegeModeSelected", 1, 2)
		GCNI A 0
		"####" A 1 A_Lower(36)
		Wait
	Ready:
		TNT1 A 0
		{
			If (!(CountInv("PrecisionBoltSwitch") || CountInv("SiegeModeSwitch")))
			{
				A_SpawnNoiseMaker("Weapon/Switch");
			}
		}
		"####" A 1 //ABCDEFGH 1 
		{
			EOA_WeaponReady(WRF_NOFIRE|WRF_NOBOB, EOA_ALLOWMANTLE|EOA_DISABLEHASTE);
			If (CountInv("PrecisionBoltSwitch"))
			{
				A_TakeInventory("PrecisionBoltSwitch");
				Return State ("PrecisionBoltMod");
			}
			Else If (CountInv("SiegeModeSwitch"))
			{
				A_TakeInventory("SiegeModeSwitch");
				Return State ("SiegeModeMod");
			}
			Return State ("");
		}
		//"####" "#" 0 A_WeaponReady(WRF_NOBOB|WRF_NOSWITCH|WRF_ALLOWRELOAD|WRF_ALLOWZOOM * !(GetPlayerInput(INPUT_OLDBUTTONS) & BT_ZOOM))
		Goto ReadyLoop
	ReRaise:
		GCPR A 0 A_JumpIfInventory("PrecisionBoltSelected", 1, 3)
		GCSR A 0 A_JumpIfInventory("SiegeModeSelected", 1, 2)
		GCNR A 0
		"####" CDEFGH 1 EOA_WeaponReady(WRF_NOFIRE|WRF_NOBOB, EOA_ALLOWMANTLE|EOA_DISABLEHASTE) //ABCDEFGH 1 
		//"####" "#" 0 A_WeaponReady(WRF_NOBOB|WRF_NOSWITCH|WRF_ALLOWRELOAD|WRF_ALLOWZOOM * !(GetPlayerInput(INPUT_OLDBUTTONS) & BT_ZOOM))
	ReadyLoop:
		GCPI A 0 A_JumpIfInventory("PrecisionBoltSelected", 1, 3)
		GCSI A 0 A_JumpIfInventory("SiegeModeSelected", 1, 2)
		GCNI A 0
		"####" A 1
		{
			EOA_WeaponReady(WRF_NOPRIMARY * (GetPlayerInput(INPUT_OLDBUTTONS) & BT_ATTACK)|WRF_NOSECONDARY * (!CountInv("PrecisionBoltSelected") && !CountInv("SiegeModeSelected"))|WRF_ALLOWRELOAD * ((CountInv("PrecisionBolt") && CountInv("SiegeMode")) || ((CountInv("PrecisionBolt") || CountInv("SiegeMode")) && (!CountInv("PrecisionBoltSelected") && !CountInv("SiegeModeSelected"))))|WRF_ALLOWZOOM * !(GetPlayerInput(INPUT_OLDBUTTONS) & BT_ZOOM), EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT|EOA_DISABLEHASTE);
			If (CountInv("PrecisionBoltSwitch"))
			{
				A_TakeInventory("PrecisionBoltSwitch");
				Return State ("SwitchToPrecisionBolt");
			}
			Else If (CountInv("SiegeModeSwitch"))
			{
				A_TakeInventory("SiegeModeSwitch");
				Return State ("SwitchToSiegeMode");
			}
			Return State ("");
		}
		Loop
	Fire:
		GCPF A 0 A_JumpIfInventory("PrecisionBoltSelected", 1, 3)
		GCSF A 0 A_JumpIfInventory("SiegeModeSelected", 1, "SiegemodePrimaryFire")
		GCNF A 0
		"####" A 0
		{
			A_ChangeVelocity(-10.5 * cos(Pitch), 0, 0, CVF_RELATIVE);
			If (VelZ < 0)
			{
				A_ChangeVelocity(VelX, VelY, 10.5 * sin(Pitch), CVF_REPLACE);
			}
			Else
			{
				A_ChangeVelocity(0, 0, 10.5 * sin(Pitch));
			}
			A_AlertMonsters;
			EOA_FireBullets(0, 0, 1, 0, "EOA_NullPuff", FBF_NORANDOMPUFFZ|FBF_USEAMMO, 32767, "GaussCannonProjectile", -6 + GetViewZ, 10 + GetRelVelY / 3);
			EOA_SetWeaponRecoilOffset(0, -6, 0, 0.5);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 64, 0, 8, 1, DYN_ADDITIVE);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 64, 0, 8, 1, DYN_ATTENUATE);
			A_SpawnNoiseMaker("Gauss/Fire", 1);
			If (CountInv("PowerQDMG"))
			{
				A_SpawnNoiseMaker("QuadDamage/Shot", 4, 1.0, 0, ATTN_NORM, 0, 18); //A_GiveInventory("QuadDamageShot");
			}
			A_GiveInventory("GaussCooldownCounter", 56);
		}
		"####" ABCDEFG 1
		{
			A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE);
			If (CountInv("Grabbing_A_Ledge"))
			{
				Return State ("LedgeClimb");
			}
			Else
			{
				Return State ("");
			}
		}
		GCPL A 0 A_JumpIfInventory("PrecisionBoltSelected", 1, 3)
		GCSL A 0 A_JumpIfInventory("SiegeModeSelected", 1, 2)
		GCNL A 0
		"####" ABCDEFGHIJK 1 EOA_WeaponReady(WRF_NOFIRE|WRF_ALLOWRELOAD * ((CountInv("PrecisionBolt") && CountInv("SiegeMode")) || ((CountInv("PrecisionBolt") || CountInv("SiegeMode")) && (!CountInv("PrecisionBoltSelected") && !CountInv("SiegeModeSelected")))), EOA_ALLOWMANTLE)
		"####" LMNOPQR 2
		{
			EOA_WeaponReady(WRF_NOFIRE|WRF_ALLOWRELOAD * ((CountInv("PrecisionBolt") && CountInv("SiegeMode")) || ((CountInv("PrecisionBolt") || CountInv("SiegeMode")) && (!CountInv("PrecisionBoltSelected") && !CountInv("SiegeModeSelected"))))|WRF_ALLOWZOOM * !(GetPlayerInput(INPUT_OLDBUTTONS) & BT_ZOOM), EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT);
			If ((GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) && CountInv("PrecisionBoltSelected"))	
			{
				Return State ("PrecisionPrime");
			}
			Return State ("");
		}
		"####" "#" 0 A_SpawnNoiseMaker("ExplosiveShot/Lock" , 20)
		"####" ST 2
		{
			EOA_WeaponReady(WRF_NOFIRE|WRF_ALLOWRELOAD * ((CountInv("PrecisionBolt") && CountInv("SiegeMode")) || ((CountInv("PrecisionBolt") || CountInv("SiegeMode")) && (!CountInv("PrecisionBoltSelected") && !CountInv("SiegeModeSelected"))))|WRF_ALLOWZOOM * !(GetPlayerInput(INPUT_OLDBUTTONS) & BT_ZOOM), EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT);
			If ((GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK))
			{
				If (CountInv("PrecisionBoltSelected"))	
				{
					Return State ("PrecisionPrime");
				}
				Else If (CountInv("SiegeModeSelected"))
				{
					Return State ("SiegePrime");
				}
			}
			Return State ("");
		}		
		Goto ReadyLoop
		
	SiegemodeprimaryFire:
		GCPF A 0 A_JumpIfInventory("PrecisionBoltSelected", 1, 3)
		GCSF A 0 A_JumpIfInventory("SiegeModeSelected", 1, 2)
		GCNF A 0
		"####" A 0
		{
			A_ChangeVelocity(-10.5 * cos(Pitch), 0, 0, CVF_RELATIVE);
			If (VelZ < 0)
			{
				A_ChangeVelocity(VelX, VelY, 10.5 * sin(Pitch), CVF_REPLACE);
			}
			Else
			{
				A_ChangeVelocity(0, 0, 10.5 * sin(Pitch));
			}
			A_AlertMonsters;
			EOA_FireBullets(0, 0, 1, 0, "EOA_NullPuff", FBF_NORANDOMPUFFZ|FBF_USEAMMO, 32767, "GaussCannonProjectile", -6 + GetViewZ, 10 + GetRelVelY / 3);
			EOA_SetWeaponRecoilOffset(0, -6, 0, 0.5);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 64, 0, 8, 1, DYN_ADDITIVE);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 64, 0, 8, 1, DYN_ATTENUATE);
			A_SpawnNoiseMaker("Gauss/Fire", 1);
			If (CountInv("PowerQDMG"))
			{
				A_SpawnNoiseMaker("QuadDamage/Shot", 4, 1.0, 0, ATTN_NORM, 0, 18); //A_GiveInventory("QuadDamageShot");
			}
			A_GiveInventory("GaussCooldownCounter", 56);
		}
		"####" ABCDEFG 1
		{
			A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE);
			If (CountInv("Grabbing_A_Ledge"))
			{
				Return State ("LedgeClimb");
			}
			Else
			{
				Return State ("");
			}
		}
		GCPL A 0 A_JumpIfInventory("PrecisionBoltSelected", 1, 3)
		GCSL A 0 A_JumpIfInventory("SiegeModeSelected", 1, 2)
		GCNL A 0
		"####" ABCDEFGHIJKLMNOPQRST 1 EOA_WeaponReady(WRF_NOFIRE|WRF_ALLOWRELOAD * ((CountInv("PrecisionBolt") && CountInv("SiegeMode")) || ((CountInv("PrecisionBolt") || CountInv("SiegeMode")) && (!CountInv("PrecisionBoltSelected") && !CountInv("SiegeModeSelected")))), EOA_ALLOWMANTLE)
		"####" UUUWXXXXXYZ 1
		{
			EOA_WeaponReady(WRF_NOFIRE|WRF_ALLOWRELOAD * ((CountInv("PrecisionBolt") && CountInv("SiegeMode")) || ((CountInv("PrecisionBolt") || CountInv("SiegeMode")) && (!CountInv("PrecisionBoltSelected") && !CountInv("SiegeModeSelected"))))|WRF_ALLOWZOOM * !(GetPlayerInput(INPUT_OLDBUTTONS) & BT_ZOOM), EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT);
			If ((GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) && CountInv("PrecisionBoltSelected"))	
			{
				Return State ("PrecisionPrime");
			}
			Return State ("");
		}
		GC2L AAAAAABCD 2
		"####" "#" 0 A_SpawnNoiseMaker("ExplosiveShot/Lock" , 20)
		"####" D 1
		{
			EOA_WeaponReady(WRF_NOFIRE|WRF_ALLOWRELOAD * ((CountInv("PrecisionBolt") && CountInv("SiegeMode")) || ((CountInv("PrecisionBolt") || CountInv("SiegeMode")) && (!CountInv("PrecisionBoltSelected") && !CountInv("SiegeModeSelected"))))|WRF_ALLOWZOOM * !(GetPlayerInput(INPUT_OLDBUTTONS) & BT_ZOOM), EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT);
			If ((GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK))
			{
				If (CountInv("PrecisionBoltSelected"))	
				{
					Return State ("PrecisionPrime");
				}
				Else If (CountInv("SiegeModeSelected"))
				{
					Return State ("SiegePrime");
				}
			}
			Return State ("");
		}		
		Goto ReadyLoop
		
	GaussHandler:
		TNT1 A 1 
		{
			A_TakeInventory("GaussCooldownCounter", 1 + CountInv("PowerHaste"));
			If (CountInv("PrecisionBoltChargeCounter") >= 105 || CountInv("SiegeModeChargeCounter") >= 70)
			{
				If (!CountInv("GaussCannonCharged"))
				{
					//A_SpawnNoiseMaker("RLR/LockingOn", 1, 0.5);
					A_SpawnNoiseMaker("Gauss/Beep", 3, 0.5);
					A_GiveInventory("GaussCannonCharged");
				}
			}
			Else
			{
				A_TakeInventory("GaussCannonCharged");
			}
			If (!CountInv("GaussCooldownCounter"))
			{
				If (CountInv("PrecisionBoltReady")) 
				{
					If (!CountInv("PrecisionBoltChargeCounter") && (CountInv("EOA_CellAmmo") >= 25 || CheckInfiniteAmmo))
					{
						A_SpawnNoiseMaker("Precision/Beep", 3);
						A_SpawnPersistentNoiseMaker(1, "Precision/Start", 6);
					}
					If (CountInv("GaussCannonSoundCounter") >= 75)
					{
						A_SpawnPersistentNoiseMaker(1, "Precision/Idle", 7, 1.0, 1);
					}
					If (CountInv("EOA_CellAmmo") >= 25 || CheckInfiniteAmmo)
					{
						A_GiveInventory("GaussCannonSoundCounter");
						A_GiveInventory("PrecisionBoltChargeCounter", (2 + CountInv("EnergyEfficient")) * (1 + CountInv("PowerHaste")));
					}
				}
				If (CountInv("SiegeModeReady") && (CountInv("EOA_CellAmmo") >= 30 || CheckInfiniteAmmo))
				{
					If (CountInv("SiegeModeChargeCounter") >= 70)
					{
						A_SpawnPersistentNoiseMaker(0, "Siege/Close", 0, 0, 0);
					}
					A_GiveInventory("SiegeModeChargeCounter", (2 + CountInv("ReducedChargeTime")) * (1 + CountInv("PowerHaste")));
				}
			}
		}
		Wait
	AltFire:
		TNT1 A 0 A_JumpIfInventory("PrecisionBoltSelected", 1, "PrecisionPrime")
		TNT1 A 0 A_JumpIfInventory("SiegeModeSelected", 1, "SiegePrime")
		Goto ReadyLoop
	PrecisionPrime:
		TNT1 A 0 
		{
			A_ZoomFactor(2, ZOOM_NOSCALETURNING);
			A_GiveInventory("PrecisionBoltReady");
			//A_SetSpeed(0.5 * (1 + CountInv("GCNLightWeight")));
		}
	PrecisionCharge:
		GCCF ABCD 4
	PrecisionReady:
		GCCF D 1
		{
			EOA_WeaponReady(WRF_NOFIRE);
			If ((GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK) && !(GetPlayerInput(INPUT_OLDBUTTONS) & BT_ATTACK) && (GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) && !CountInv("GaussCooldownCounter") && CountInv("PrecisionBoltSelected") && CountInv("EOA_CellAmmo") >= 15)
			{
				A_SpawnPersistentNoiseMaker(1, "", 6);
				A_TakeInventory("GaussCannonSoundCounter");
				A_SpawnPersistentNoiseMaker(1, "Precision/End", 7);
				Return State ("PrecisionFire");
			}
			Else If (!(GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) || CountInv("Grabbing_A_Ledge") || !CountInv("PrecisionBoltSelected") || (CountInv("EquipmentTrigger") && CountInv("EquipmentCharge")))
			{
				A_SpawnPersistentNoiseMaker(1, "", 6);
				A_TakeInventory("GaussCannonSoundCounter");
				A_SpawnPersistentNoiseMaker(1, "", 7);
				If (CountInv("PrecisionBoltSelected"))
				{
					A_SpawnPersistentNoiseMaker(1, "Precision/End", 7);
				}
				Return State ("PrecisionEnd");
			}
			Else
			{
				Return State ("");
			}
		}
		Loop
	PrecisionFire:
		TNT1 A 0
		{
			//A_ChangeVelocity(-10.5 * cos(Pitch), 0, 10.5 * sin(Pitch), CVF_RELATIVE);
			A_AlertMonsters;
			EOA_FireBullets(0, 0, 1, 0, "EOA_NullPuff", FBF_NORANDOMPUFFZ, 32767, "PrecisionBoltProjectile", -6 + GetViewZ, 0 + GetRelVelY / 3);
			EOA_SetWeaponRecoilOffset(0, -7, 0, 0.5);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 64, 0, 8, 1, DYN_ADDITIVE);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 64, 0, 8, 1, DYN_ATTENUATE);
			A_TakeInventory("EOA_CellAmmo", 25, TIF_NOTAKEINFINITE);
			A_SpawnNoiseMaker("Precision/Fire", 1);
			A_SpawnNoiseMaker("Gauss/Add", 5, 0.5);
			If (CountInv("PowerQDMG"))
			{
				A_SpawnNoiseMaker("QuadDamage/Shot", 4, 1.0, 0, ATTN_NORM, 0, 18); //A_GiveInventory("QuadDamageShot");
			}
			A_GiveInventory("GaussCooldownCounter", 56 / (1 + CountInv("EnergyEfficient")));
		}
		GCPF ABCDEFG 2
		TNT1 A 0
		{
			EOA_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE);
			If (CountInv("Grabbing_A_Ledge") || !CountInv("PrecisionBoltSelected") || (CountInv("EquipmentTrigger") && CountInv("EquipmentCharge")))
			{
				Return State ("PrecisionEnd");
			}
			Else
			{
				Return State ("");
			}
		}
		//TNT1 A 0 A_TakeInventory("PrecisionBoltChargeCounter")
		TNT1 A 0
		{
			EOA_WeaponReady(WRF_NOPRIMARY * CountInv("GaussCooldownCounter")|WRF_NOPRIMARY * CountInv("PrecisionBoltReady")|WRF_NOPRIMARY * (GetPlayerInput(INPUT_OLDBUTTONS) & BT_ATTACK)|WRF_NOSECONDARY|WRF_ALLOWRELOAD * ((CountInv("PrecisionBolt") && CountInv("SiegeMode")) || ((CountInv("PrecisionBolt") || CountInv("SiegeMode")) && (!CountInv("PrecisionBoltSelected") && !CountInv("SiegeModeSelected")))) * !CountInv("PrecisionBoltReady")|WRF_ALLOWZOOM * !(GetPlayerInput(INPUT_OLDBUTTONS) & BT_ZOOM) * !CountInv("PrecisionBoltReady"), EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT|EOA_WEAPSPEEDUPGRADE * CountInv("EnergyEfficient"));
			If ((GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) && !CountInv("PrecisionBoltReady")) 
			{
				A_ZoomFactor(2, ZOOM_NOSCALETURNING);
				A_GiveInventory("PrecisionBoltReady");
				//A_SetSpeed(0.5 * (1 + CountInv("GCNLightWeight")));
				//A_SpawnPersistentNoiseMaker(1, "Precision/ZoomIn", 5, 0.5);
			}
			Else If ((!(GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) && CountInv("PrecisionBoltReady")) || CountInv("Grabbing_A_Ledge") || !CountInv("PrecisionBoltSelected") || (CountInv("EquipmentTrigger") && CountInv("EquipmentCharge")))
			{
				A_ZoomFactor(1, ZOOM_INSTANT * !CountInv("PrecisionBoltSelected"));
				//A_SetSpeed(1);
				A_TakeInventory("PrecisionBoltReady");
				A_SpawnPersistentNoiseMaker(1, "", 5); //[DoomKrakken]: In case the zoom-in sound is being played and we've already detached the Precision Bolt module.
				If (CountInv("PrecisionBoltSelected"))
				{
					A_SpawnPersistentNoiseMaker(1, "Precision/ZoomOut", 5);
				}
			}
		/*	If (CountInv("PrecisionBoltReady"))
			{
				A_WeaponOffset(0, 160);
			}*/
		}
		GCPL ABCDEFGHIJKLMNOPQRSTU 1
		TNT1 A 0 A_SpawnNoiseMaker("Gauss/Cycle", 1)
	PrecisionEnd:
		TNT1 A 0
		{
			A_TakeInventory("PrecisionBoltChargeCounter");
			If (!CountInv("GaussCooldownCounter"))
			{
				Return State ("PrecisionCancel");
			}
			Return State ("");
		}
		TNT1 A 0
		{
			EOA_WeaponReady(WRF_NOPRIMARY * CountInv("GaussCooldownCounter")|WRF_NOPRIMARY * CountInv("PrecisionBoltReady")|WRF_NOPRIMARY * (GetPlayerInput(INPUT_OLDBUTTONS) & BT_ATTACK)|WRF_NOSECONDARY|WRF_ALLOWRELOAD * ((CountInv("PrecisionBolt") && CountInv("SiegeMode")) || ((CountInv("PrecisionBolt") || CountInv("SiegeMode")) && (!CountInv("PrecisionBoltSelected") && !CountInv("SiegeModeSelected")))) * !CountInv("PrecisionBoltReady")|WRF_ALLOWZOOM * !(GetPlayerInput(INPUT_OLDBUTTONS) & BT_ZOOM) * !CountInv("PrecisionBoltReady"), EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT|EOA_WEAPSPEEDUPGRADE * CountInv("EnergyEfficient"));
			If ((!(GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) && CountInv("PrecisionBoltReady")) || CountInv("Grabbing_A_Ledge") || !CountInv("PrecisionBoltSelected") || (CountInv("EquipmentTrigger") && CountInv("EquipmentCharge")))
			{
				A_ZoomFactor(1, ZOOM_INSTANT * !CountInv("PrecisionBoltSelected"));
				//A_SetSpeed(1);
				A_TakeInventory("PrecisionBoltReady");
				A_SpawnPersistentNoiseMaker(1, "", 5); //[DoomKrakken]: In case the zoom-in sound is being played and we've already detached the Precision Bolt module.
				If (CountInv("PrecisionBoltSelected"))
				{
					A_SpawnPersistentNoiseMaker(1, "Precision/ZoomOut", 5);
				}
			}
			If (!CountInv("PrecisionBoltSelected"))
			{
				Return State ("ReadyLoop");
			}
			Else If ((GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK)) 
			{
				Return State ("PrecisionCharge");
			}
			Return State ("");
		}
		TNT1 A 0 A_JumpIf((GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) && CountInv("PrecisionBoltReady"), "PrecisionReady")
		Goto ReadyLoop
	PrecisionCancel:
		TNT1 A 0
		{
			A_ZoomFactor(1, ZOOM_INSTANT * !CountInv("PrecisionBoltSelected"));
			//A_SetSpeed(1);
			A_TakeInventory("PrecisionBoltReady");
			A_SpawnPersistentNoiseMaker(1, "", 5); //[DoomKrakken]: In case the zoom-in sound is being played and we've already detached the Precision Bolt module.
			If (CountInv("PrecisionBoltSelected"))
			{
				A_SpawnPersistentNoiseMaker(1, "Precision/ZoomOut", 5);
			}
		}
		GCPI ABABABABABABABAABBAABBAABBAABBAABBAABB 1
		{
			EOA_WeaponReady(WRF_NOPRIMARY * CountInv("GaussCooldownCounter")|WRF_NOPRIMARY * CountInv("PrecisionBoltReady")|WRF_NOPRIMARY * (GetPlayerInput(INPUT_OLDBUTTONS) & BT_ATTACK)|WRF_NOSECONDARY|WRF_ALLOWRELOAD * ((CountInv("PrecisionBolt") && CountInv("SiegeMode")) || ((CountInv("PrecisionBolt") || CountInv("SiegeMode")) && (!CountInv("PrecisionBoltSelected") && !CountInv("SiegeModeSelected")))) * !CountInv("PrecisionBoltReady")|WRF_ALLOWZOOM * !(GetPlayerInput(INPUT_OLDBUTTONS) & BT_ZOOM) * !CountInv("PrecisionBoltReady"), EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT|EOA_WEAPSPEEDUPGRADE * CountInv("EnergyEfficient"));
			If (!CountInv("PrecisionBoltSelected"))
			{
				Return State ("ReadyLoop");
			}
			Else If ((GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK)) 
			{
				Return State ("PrecisionPrime");
			}
			Return State ("");
		}
		Goto ReadyLoop
	SiegePrime:
		TNT1 A 0
		{
			A_SpawnPersistentNoiseMaker(1, "EMG/Charge", 1);
			A_SpawnPersistentNoiseMaker(1, "Siege/Charge", 6);
			A_SpawnPersistentNoiseMaker(1, "Siege/Charge/Start", 5, 0.25);
			A_GiveInventory("SiegeModeReady");
			If (CountInv("MobileSiege"))
			{
				//A_SetSpeed(0.5);
			}
			Else
			{
				SetPlayerProperty(0, 1, PROP_FROZEN);
			}
			If (CountInv("PowerHaste") || CountInv("ReducedChargeTime"))
			{
				If (CountInv("PowerHaste") && CountInv("ReducedChargeTime"))
				{
					Return State ("FasterSiegePrime");
				}
				Else
				{
					Return State ("FastSiegePrime");
				}
			}
			Else
			{
				Return State ("");
			}
		}
		//[DoomKrakken]: I'm having it jump to a faster animation AND having it do the usual tic manipulation here.  The only reason why I'd have it jump to another state sequence is so that I can carefully select the sprite frames where the turbine alternates.  That being said, the only reason why I'd have it do the typical tic manipulation stuff here is so that it'll speed up if one just so happens to get either speed buff during the animation's duration.  It'll look off that one time, in that one situation, but it's better than waiting the whole time if there's a speed buff present. ;)
		GSMC AAAAAAAAAAAABBCDEEEEE 3 /*IJIJ*//*OPOPOP*//*WXWX*/
		{
			
			EOA_WeaponReady(WRF_NOFIRE, EOA_WEAPSPEEDUPGRADE * CountInv("ReducedChargeTime"));
			If (!(GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) || CountInv("Grabbing_A_Ledge") || !CountInv("SiegeModeSelected") || (CountInv("EquipmentTrigger") && CountInv("EquipmentCharge")))
			{
				Return State ("SiegeClose");
			}
			If ((GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK) && (GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK))
			{
				Return State ("SiegeFire1");
			}
			Return State ("");
		}
		TNT1 A 0 EOA_SetWeaponRecoilOffset(0, -3, 0, 0.5)
		TNT1 A 0
		{
			If ((GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK) && (GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK))
			{
				Return State ("SiegeFire1");
			}
			Return State ("");
		}
		GSMC EEEEEEFFGHHHHH 3 /*IJIJ*//*OPOPOP*//*WXWX*/
		{
			
			EOA_WeaponReady(WRF_NOFIRE, EOA_WEAPSPEEDUPGRADE * CountInv("ReducedChargeTime"));
			If (!(GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) || CountInv("Grabbing_A_Ledge") || !CountInv("SiegeModeSelected") || (CountInv("EquipmentTrigger") && CountInv("EquipmentCharge")))
			{
				Return State ("SiegeClose");
			}
			Return State ("");
		}
		TNT1 A 0 EOA_SetWeaponRecoilOffset(0, 0, 2, 0.5)
		TNT1 A 0 A_BladeWave
		GSMC HHHIJ 3 /*IJIJ*//*OPOPOP*//*WXWX*/
		{
			EOA_WeaponReady(WRF_NOFIRE, EOA_WEAPSPEEDUPGRADE * CountInv("ReducedChargeTime"));
			If (!(GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) || CountInv("Grabbing_A_Ledge") || !CountInv("SiegeModeSelected") || (CountInv("EquipmentTrigger") && CountInv("EquipmentCharge")))
			{
				Return State ("SiegeClose");
			}
			Return State ("");
		}
		TNT1 A 0 A_SpawnPersistentNoiseMaker(1, "Siege/Idle", 6)
		TNT1 A 0 EOA_SetWeaponRecoilOffset(0, 0, -2, 0.5)
		Goto SiegeWait
	FastSiegePrime:
		GSMC AAAAAAAAAAAABBCDEEEEE 3 /*IJIJ*//*OPOPOP*//*WXWX*/
		{
			
			EOA_WeaponReady(WRF_NOFIRE, EOA_WEAPSPEEDUPGRADE * CountInv("ReducedChargeTime"));
			If (!(GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) || CountInv("Grabbing_A_Ledge") || !CountInv("SiegeModeSelected") || (CountInv("EquipmentTrigger") && CountInv("EquipmentCharge")))
			{
				Return State ("SiegeClose");
			}
			If ((GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK) && (GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK))
			{
				Return State ("SiegeFire1");
			}
			Return State ("");
		}
		TNT1 A 0 EOA_SetWeaponRecoilOffset(0, -3, 0, 0.5)
		TNT1 A 0
		{
			If ((GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK) && (GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK))
			{
				Return State ("SiegeFire1");
			}
			Return State ("");
		}
		GSMC EEEEEEFFGHHHHH 3 /*IJIJ*//*OPOPOP*//*WXWX*/
		{
			
			EOA_WeaponReady(WRF_NOFIRE, EOA_WEAPSPEEDUPGRADE * CountInv("ReducedChargeTime"));
			If (!(GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) || CountInv("Grabbing_A_Ledge") || !CountInv("SiegeModeSelected") || (CountInv("EquipmentTrigger") && CountInv("EquipmentCharge")))
			{
				Return State ("SiegeClose");
			}
			Return State ("");
		}
		TNT1 A 0 EOA_SetWeaponRecoilOffset(0, 0, 2, 0.5)
		TNT1 A 0 A_BladeWave
		GSMC HHHIJ 3 /*IJIJ*//*OPOPOP*//*WXWX*/
		{
			EOA_WeaponReady(WRF_NOFIRE, EOA_WEAPSPEEDUPGRADE * CountInv("ReducedChargeTime"));
			If (!(GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) || CountInv("Grabbing_A_Ledge") || !CountInv("SiegeModeSelected") || (CountInv("EquipmentTrigger") && CountInv("EquipmentCharge")))
			{
				Return State ("SiegeClose");
			}
			Return State ("");
		}
		TNT1 A 0 A_SpawnPersistentNoiseMaker(1, "Siege/Idle", 6)
		TNT1 A 0 EOA_SetWeaponRecoilOffset(0, 0, -2, 0.5)
		Goto SiegeWait
	FasterSiegePrime:
		GSMC AAAAAAAAAAAABBCDEEEEE 3 /*IJIJ*//*OPOPOP*//*WXWX*/
		{
			
			EOA_WeaponReady(WRF_NOFIRE, EOA_WEAPSPEEDUPGRADE * CountInv("ReducedChargeTime"));
			If (!(GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) || CountInv("Grabbing_A_Ledge") || !CountInv("SiegeModeSelected") || (CountInv("EquipmentTrigger") && CountInv("EquipmentCharge")))
			{
				Return State ("SiegeClose");
			}
			If ((GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK) && (GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK))
			{
				Return State ("SiegeFire1");
			}
			Return State ("");
		}
		TNT1 A 0 EOA_SetWeaponRecoilOffset(0, -3, 0, 0.5)
		TNT1 A 0
		{
			If ((GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK) && (GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK))
			{
				Return State ("SiegeFire1");
			}
			Return State ("");
		}
		GSMC EEEEEEFFGHHHHH 3 /*IJIJ*//*OPOPOP*//*WXWX*/
		{
			
			EOA_WeaponReady(WRF_NOFIRE, EOA_WEAPSPEEDUPGRADE * CountInv("ReducedChargeTime"));
			If (!(GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) || CountInv("Grabbing_A_Ledge") || !CountInv("SiegeModeSelected") || (CountInv("EquipmentTrigger") && CountInv("EquipmentCharge")))
			{
				Return State ("SiegeClose");
			}
			Return State ("");
		}
		TNT1 A 0 EOA_SetWeaponRecoilOffset(0, 0, 2, 0.5)
		TNT1 A 0 A_BladeWave
		GSMC HHHIJ 3 /*IJIJ*//*OPOPOP*//*WXWX*/
		{
			EOA_WeaponReady(WRF_NOFIRE, EOA_WEAPSPEEDUPGRADE * CountInv("ReducedChargeTime"));
			If (!(GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) || CountInv("Grabbing_A_Ledge") || !CountInv("SiegeModeSelected") || (CountInv("EquipmentTrigger") && CountInv("EquipmentCharge")))
			{
				Return State ("SiegeClose");
			}
			Return State ("");
		}
		TNT1 A 0 A_SpawnPersistentNoiseMaker(1, "Siege/Idle", 6)
		TNT1 A 0 EOA_SetWeaponRecoilOffset(0, 0, -2, 0.5)
		Goto SiegeWait
	SiegeWait:
		GSMC J 1
		{
			EOA_WeaponReady(WRF_NOFIRE, EOA_DISABLEHASTE);
			If (!(GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) || CountInv("Grabbing_A_Ledge") || !CountInv("SiegeModeSelected") || (CountInv("EquipmentTrigger") && CountInv("EquipmentCharge")))
			{
				Return State ("SiegeClose");
			}
			Else If (CountInv("SiegeModeChargeCounter") >= 70)
			{
				Return State ("SiegeReady");
			}
			Return State ("");
		}
		Loop
	SiegeReady:
		GSMI A 1
		{
			EOA_WeaponReady(WRF_NOFIRE, EOA_DISABLEHASTE);
			If ((GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK) && !(GetPlayerInput(INPUT_OLDBUTTONS) & BT_ATTACK) && (GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK))
			{
				Return State ("SiegeFire");
			}
			Else If (!(GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) || CountInv("Grabbing_A_Ledge") || !CountInv("SiegeModeSelected") || (CountInv("EquipmentTrigger") && CountInv("EquipmentCharge")))
			{
				Return State ("SiegeClose");
			}
			Return State ("");
		}
		Loop
		
	SiegeFire:
		TNT1 A 0
		{
			//A_SetSpeed(1);
			SetPlayerProperty(0, 0, PROP_FROZEN);
			A_ChangeVelocity(-10.5 * cos(Pitch), 0, 0, CVF_RELATIVE);
			If (VelZ < 0)
			{
				A_ChangeVelocity(VelX, VelY, 10.5 * sin(Pitch), CVF_REPLACE);
			}
			Else
			{
				A_ChangeVelocity(0, 0, 10.5 * sin(Pitch));
			}
			A_AlertMonsters;
			EOA_FireBullets(0, 0, 0, 0, "EOA_NullPuff", FBF_NORANDOMPUFFZ, 0, "DestroyerbladeFront", -5 + GetViewZ, 12 + GetRelVelY / 4);
			EOA_FireBullets(0, 0, 0, 0, "EOA_NullPuff", FBF_NORANDOMPUFFZ, 0, "DestroyerbladeR1", -5 + GetViewZ, 46 + GetRelVelY / 4);
			EOA_FireBullets(0, 0, 0, 0, "EOA_NullPuff", FBF_NORANDOMPUFFZ, 0, "DestroyerbladeR2", -5 + GetViewZ, 77 + GetRelVelY / 4);
			EOA_FireBullets(0, 0, 0, 0, "EOA_NullPuff", FBF_NORANDOMPUFFZ, 0, "DestroyerbladeR3", -5 + GetViewZ, 115 + GetRelVelY / 4);
			EOA_FireBullets(0, 0, 0, 0, "EOA_NullPuff", FBF_NORANDOMPUFFZ, 0, "DestroyerbladeL1", -5 + GetViewZ, -20 + GetRelVelY / 4);
			EOA_FireBullets(0, 0, 0, 0, "EOA_NullPuff", FBF_NORANDOMPUFFZ, 0, "DestroyerbladeL2", -5 + GetViewZ, -51 + GetRelVelY / 4);
			EOA_FireBullets(0, 0, 0, 0, "EOA_NullPuff", FBF_NORANDOMPUFFZ, 0, "DestroyerbladeL3", -5 + GetViewZ, -90 + GetRelVelY / 4);
			EOA_SetWeaponRecoilOffset(0, 0, 7, 0.5);
			EOA_SetWeaponRecoilOffset(0, -7);
			If (GetCVar("EOA_APRRecoil"))
			{
				A_ZoomFactor(0.98, ZOOM_NOSCALETURNING);
			}
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 64, 0, 8, 1, DYN_ADDITIVE);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 64, 0, 8, 1, DYN_ATTENUATE);
			A_TakeInventory("EOA_CellAmmo", 30, TIF_NOTAKEINFINITE);
			A_SpawnPersistentNoiseMaker(1, "Siege/Add", 6, 0.5);
			A_SpawnPersistentNoiseMaker(1, "", 7);
			If (CountInv("PowerQDMG"))
			{
				A_SpawnNoiseMaker("QuadDamage/Shot", 4, 1.0, 0, ATTN_NORM, 0, 18); //A_GiveInventory("QuadDamageShot");
			}
			A_TakeInventory("SiegeModeReady");
			A_TakeInventory("SiegeModeChargeCounter");
		}
		GCPF A 0 A_JumpIfInventory("PrecisionBoltSelected", 1, 3)
		GCSF A 0 A_JumpIfInventory("SiegeModeSelected", 1, 2)
		GCNF A 0
		"####" A 0
		{
			A_ChangeVelocity(-10.5 * cos(Pitch), 0, 0, CVF_RELATIVE);
			If (VelZ < 0)
			{
				A_ChangeVelocity(VelX, VelY, 10.5 * sin(Pitch), CVF_REPLACE);
			}
			Else
			{
				A_ChangeVelocity(0, 0, 10.5 * sin(Pitch));
			}
			A_AlertMonsters;
			EOA_SetWeaponRecoilOffset(0, -6, 0, 0.5);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 64, 0, 8, 1, DYN_ADDITIVE);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 64, 0, 8, 1, DYN_ATTENUATE);
			A_SpawnNoiseMaker("Gauss/Fire", 1);
			If (CountInv("PowerQDMG"))
			{
				A_SpawnNoiseMaker("QuadDamage/Shot", 4, 1.0, 0, ATTN_NORM, 0, 18); //A_GiveInventory("QuadDamageShot");
			}
			A_GiveInventory("GaussCooldownCounter", 56);
		}
		"####" ABCDEFG 1
		{
			A_WeaponReady(WRF_NOSWITCH|WRF_NOFIRE);
			If (CountInv("Grabbing_A_Ledge"))
			{
				Return State ("LedgeClimb");
			}
			Else
			{
				Return State ("");
			}
		}
		GCPL A 0 A_JumpIfInventory("PrecisionBoltSelected", 1, 3)
		GCSL A 0 A_JumpIfInventory("SiegeModeSelected", 1, 2)
		GCNL A 0
		"####" ABCDEFGHIJKLMNOPQRST 1 EOA_WeaponReady(WRF_NOFIRE|WRF_ALLOWRELOAD * ((CountInv("PrecisionBolt") && CountInv("SiegeMode")) || ((CountInv("PrecisionBolt") || CountInv("SiegeMode")) && (!CountInv("PrecisionBoltSelected") && !CountInv("SiegeModeSelected")))), EOA_ALLOWMANTLE)
		"####" UUUWXXXXXYZ 1
		{
			EOA_WeaponReady(WRF_NOFIRE|WRF_ALLOWRELOAD * ((CountInv("PrecisionBolt") && CountInv("SiegeMode")) || ((CountInv("PrecisionBolt") || CountInv("SiegeMode")) && (!CountInv("PrecisionBoltSelected") && !CountInv("SiegeModeSelected"))))|WRF_ALLOWZOOM * !(GetPlayerInput(INPUT_OLDBUTTONS) & BT_ZOOM), EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT);
			If ((GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) && CountInv("PrecisionBoltSelected"))	
			{
				Return State ("PrecisionPrime");
			}
			Return State ("");
		}
		GC2L AAAAAABCD 2
		"####" "#" 0 A_SpawnNoiseMaker("ExplosiveShot/Lock" , 20)
		"####" D 1
		{
			EOA_WeaponReady(WRF_NOFIRE|WRF_ALLOWRELOAD * ((CountInv("PrecisionBolt") && CountInv("SiegeMode")) || ((CountInv("PrecisionBolt") || CountInv("SiegeMode")) && (!CountInv("PrecisionBoltSelected") && !CountInv("SiegeModeSelected"))))|WRF_ALLOWZOOM * !(GetPlayerInput(INPUT_OLDBUTTONS) & BT_ZOOM), EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT);
			If ((GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK))
			{
				If (CountInv("PrecisionBoltSelected"))	
				{
					Return State ("PrecisionPrime");
				}
				Else If (CountInv("SiegeModeSelected"))
				{
					Return State ("SiegePrime");
				}
			}
			Return State ("");
		}		
		TNT1 A 0
		{
			A_ZoomFactor;
			EOA_WeaponReady(WRF_NOFIRE, EOA_ALLOWMANTLE);
		}
		Goto ReadyLoop
	SiegeClose:
		TNT1 A 0
		{
			//A_SetSpeed(1);
			SetPlayerProperty(0, 0, PROP_FROZEN);
			A_TakeInventory("SiegeModeReady");
			A_TakeInventory("SiegeModeChargeCounter");
			A_SpawnPersistentNoiseMaker(1, "", 7);
			If (CountInv("SiegeModeSelected"))
			{
				A_SpawnPersistentNoiseMaker(1, "Siege/Close", 7, 0.25);
			}
		}
		GSMC JI 2
		{
			EOA_WeaponReady(WRF_NOFIRE, EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT);
			If (!CountInv("SiegeModeSelected"))
			{
				Return State ("ReadyLoop");
			}
			Return State ("");
		}
		GSMC HGFEDCBA 2
		{
			EOA_WeaponReady(WRF_NOFIRE, EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT);
			If (!CountInv("SiegeModeSelected"))
			{
				Return State ("ReadyLoop");
			}
			Return State ("");
		}
		Goto ReadyLoop
	Reload:
		TNT1 A 0 A_JumpIf(CountInv("PrecisionBolt") && !CountInv("PrecisionBoltSelected"), "SwitchToPrecisionBolt")
		TNT1 A 0 A_JumpIf(CountInv("SiegeMode") && !CountInv("SiegeModeSelected"), "SwitchToSiegeMode")
		Goto ReadyLoop
	SwitchToPrecisionBolt:
		GCSR A 0 A_JumpIfInventory("SiegeModeSelected", 1, 2)
		GCNR A 0
		"####" HGFEDCBA 1
	PrecisionBoltMod:
		TNT1 A 0 
		{
			A_GiveInventory("PrecisionBoltSelected");
			A_TakeInventory("SiegeModeSelected");
		}
		GCPM ABCDEFGHIJKLMNOPQRST 1 EOA_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH, EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT|EOA_WEAPSPEEDUPGRADE * CountInv("Adept"))
		TNT1 A 0 A_SpawnNoiseMaker("PrecisionBolt/Equip", 7)
		GCPM UUUUUUUUUUUUUUU 1 EOA_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH, EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT|EOA_WEAPSPEEDUPGRADE * CountInv("Adept"))
		GCPM VVVVVVVVVVVVVVVWXYZ 1 EOA_WeaponReady(WRF_NOFIRE|WRF_ALLOWRELOAD * CountInv("SiegeMode"), EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT|EOA_WEAPSPEEDUPGRADE * CountInv("Adept"))
		GCP2 ABCDEFGHIJKLMNOP 1 EOA_WeaponReady(WRF_NOFIRE|WRF_ALLOWRELOAD * CountInv("SiegeMode"), EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT|EOA_WEAPSPEEDUPGRADE * CountInv("Adept"))
		GCPI AAABBB 1 EOA_WeaponReady(WRF_NOFIRE|WRF_ALLOWRELOAD * CountInv("SiegeMode"), EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT|EOA_WEAPSPEEDUPGRADE * CountInv("Adept")) //AAABBBAAABBB 1
 		Goto ReadyLoop
	SwitchToSiegeMode:
		GCPR A 0 A_JumpIfInventory("PrecisionBoltSelected", 1, 2)
		GCNR A 0
		"####" HGFEDCBA 1
	SiegeModeMod:
		TNT1 A 0 
		{
			A_GiveInventory("SiegeModeSelected");
			A_TakeInventory("PrecisionBoltSelected");
		}
		GCSM ABCDEFGHIJKLMNOPQRS 1 EOA_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH, EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT|EOA_WEAPSPEEDUPGRADE * CountInv("Adept"))
		TNT1 A 0 A_SpawnNoiseMaker("SiegeMode/Equip", 7)
		GCSM TUVWWXXXWWWXXXYZ 1 EOA_WeaponReady(WRF_NOFIRE|WRF_NOSWITCH, EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT|EOA_WEAPSPEEDUPGRADE * CountInv("Adept"))
		GCS2 ABBBAAABBBAAABCDEFGHIJKLMNOPQRS 1 EOA_WeaponReady(WRF_NOFIRE|WRF_ALLOWRELOAD * CountInv("PrecisionBolt"), EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT|EOA_WEAPSPEEDUPGRADE * CountInv("Adept"))
		GCSI AAABBB 1 EOA_WeaponReady(WRF_NOFIRE|WRF_ALLOWRELOAD * CountInv("PrecisionBolt"), EOA_ALLOWMANTLE|EOA_ALLOWEQUIPMENT|EOA_WEAPSPEEDUPGRADE * CountInv("Adept")) //AAABBBAAABBB 1
		Goto ReadyLoop
	Zoom:
		GCPT A 0 A_JumpIfInventory("PrecisionBoltSelected", 1, 3)
		GCST A 0 A_JumpIfInventory("SiegeModeSelected", 1, 2)
		GCNT A 0
		"####" "#" 0
		Goto Super::Melee
	UseEquipment:
		"####" "#" 0
		Goto Super::UseEquipment
	}
}

ACTOR GaussCannonProjectile : EOA_FastProjectile
{
	Radius 5
	Height 5
	//Speed 200
	Damage (320)
	Decal "Scorch"
	Scale 3
	RenderStyle "Add"
	EOA_Projectile.PuffType "GaussCannonProjectilePuff"
	//EOA_Projectile.RipFailChance 4
	+BLOODLESSIMPACT
	+DONTBLAST
	+DONTREFLECT
	+EXTREMEDEATH
	//+FORCERADIUSDMG
	+RIPPER
	States
	{
	Spawn:
		TRAC A -1 Bright
		Wait
	XDeath:
		TNT1 A 0 A_PlaySound("Gauss/Damage", 1)
	Death:
	Crash:
		TNT1 A 1
		{
			A_Explode(24 * !CheckClass("SiegeModeProjectile"), 80, 0, 1, 80);
			Radius_Quake(5, 10, 0, 10, 0);
			A_PlaySound("Gauss/Impact", 2);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ADDITIVE, False);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ATTENUATE, False);
		}
		Stop
	}
}


ACTOR DestroyerbladeProjectile : EOA_Projectile
{
	Radius 150
	Height 3
	speed 50
	Damage (137)
	Decal "Scorch"
	Scale 2
	RenderStyle "Add"
	EOA_Projectile.PuffType "GaussCannonProjectilePuff"
	//EOA_Projectile.RipFailChance 4
	+DONTBLAST
	+DONTREFLECT
	+EXTREMEDEATH
	+RIPPER
	States
	{
	Spawn:
		TRAC A 1 Bright
	Wait
	XDeath:
		TNT1 A 0 A_PlaySound("Gauss/Damage", 1)
	Death:
	Crash:
		TNT1 A 1
		{
			A_SpawnItemEx("GaussCannonProjectilePuff", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			A_Explode(13 * !CheckClass("DestroyerbladeProjectile"), 80, 0, 1, 80);
			Radius_Quake(5, 10, 0, 10, 0);
			A_PlaySound("Gauss/Impact", 2);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ADDITIVE, False);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ATTENUATE, False);
		}
		Stop
	}
}

//destroyerblade
ACTOR DestroyerbladeFront : EOA_Projectile
{
	Radius 20
	Height 3
	speed 50
	Damage (137)
	Decal "Scorch"
	Scale 2
	RenderStyle "Add"
	EOA_Projectile.PuffType "GaussCannonProjectilePuff"
	//EOA_Projectile.RipFailChance 4
	+DONTBLAST
	+DONTREFLECT
	+EXTREMEDEATH
	+RIPPER
	States
	{
	Spawn:
		TRAC A 1 Bright
	Wait
	XDeath:
		TNT1 A 0 A_PlaySound("Gauss/Damage", 1)
	Death:
	Crash:
		TNT1 A 1
		{
			A_SpawnItemEx("GaussCannonProjectilePuff", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			A_Explode(13 * !CheckClass("DestroyerbladeProjectile"), 80, 0, 1, 80);
			Radius_Quake(5, 10, 0, 10, 0);
			A_PlaySound("Gauss/Impact", 2);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ADDITIVE, False);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ATTENUATE, False);
		}
		Stop
	}
}

ACTOR DestroyerbladeR1 : EOA_Projectile
{
	Radius 20
	Height 3
	speed 50
	Damage (137)
	Decal "Scorch"
	Scale 2
	RenderStyle "Add"
	EOA_Projectile.PuffType "GaussCannonProjectilePuff"
	//EOA_Projectile.RipFailChance 4
	+DONTBLAST
	+DONTREFLECT
	+EXTREMEDEATH
	+RIPPER
	States
	{
	Spawn:
		TRAC A 1 Bright
	Wait
	XDeath:
		TNT1 A 0 A_PlaySound("Gauss/Damage", 1)
	Death:
	Crash:
		TNT1 A 1
		{
			A_SpawnItemEx("GaussCannonProjectilePuff", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			A_Explode(13 * !CheckClass("DestroyerbladeProjectile"), 80, 0, 1, 80);
			Radius_Quake(5, 10, 0, 10, 0);
			A_PlaySound("Gauss/Impact", 2);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ADDITIVE, False);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ATTENUATE, False);
		}
		Stop
	}
}
ACTOR DestroyerbladeR2 : EOA_Projectile
{
	Radius 20
	Height 3
	speed 50
	Damage (137)
	Decal "Scorch"
	Scale 2
	RenderStyle "Add"
	EOA_Projectile.PuffType "GaussCannonProjectilePuff"
	//EOA_Projectile.RipFailChance 4
	+DONTBLAST
	+DONTREFLECT
	+EXTREMEDEATH
	+RIPPER
	States
	{
	Spawn:
		TRAC A 1 Bright
	Wait
	XDeath:
		TNT1 A 0 A_PlaySound("Gauss/Damage", 1)
	Death:
	Crash:
		TNT1 A 1
		{
			A_SpawnItemEx("GaussCannonProjectilePuff", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			A_Explode(13 * !CheckClass("DestroyerbladeProjectile"), 80, 0, 1, 80);
			Radius_Quake(5, 10, 0, 10, 0);
			A_PlaySound("Gauss/Impact", 2);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ADDITIVE, False);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ATTENUATE, False);
		}
		Stop
	}
}

ACTOR DestroyerbladeR3 : EOA_Projectile
{
	Radius 20
	Height 3
	speed 50
	Damage (137)
	Decal "Scorch"
	Scale 2
	RenderStyle "Add"
	EOA_Projectile.PuffType "GaussCannonProjectilePuff"
	//EOA_Projectile.RipFailChance 4
	+DONTBLAST
	+DONTREFLECT
	+EXTREMEDEATH
	+RIPPER
	States
	{
	Spawn:
		TRAC A 1 Bright
	Wait
	XDeath:
		TNT1 A 0 A_PlaySound("Gauss/Damage", 1)
	Death:
	Crash:
		TNT1 A 1
		{
			A_SpawnItemEx("GaussCannonProjectilePuff", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			A_Explode(13 * !CheckClass("DestroyerbladeProjectile"), 80, 0, 1, 80);
			Radius_Quake(5, 10, 0, 10, 0);
			A_PlaySound("Gauss/Impact", 2);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ADDITIVE, False);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ATTENUATE, False);
		}
		Stop
	}
}

ACTOR DestroyerbladeL1 : EOA_Projectile
{
	Radius 20
	Height 3
	speed 50
	Damage (137)
	Decal "Scorch"
	Scale 2
	RenderStyle "Add"
	EOA_Projectile.PuffType "GaussCannonProjectilePuff"
	//EOA_Projectile.RipFailChance 4
	+DONTBLAST
	+DONTREFLECT
	+EXTREMEDEATH
	+RIPPER
	States
	{
	Spawn:
		TRAC A 1 Bright
	Wait
	XDeath:
		TNT1 A 0 A_PlaySound("Gauss/Damage", 1)
	Death:
	Crash:
		TNT1 A 1
		{
			A_SpawnItemEx("GaussCannonProjectilePuff", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			A_Explode(13 * !CheckClass("DestroyerbladeProjectile"), 80, 0, 1, 80);
			Radius_Quake(5, 10, 0, 10, 0);
			A_PlaySound("Gauss/Impact", 2);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ADDITIVE, False);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ATTENUATE, False);
		}
		Stop
	}
}
ACTOR DestroyerbladeL2 : EOA_Projectile
{
	Radius 20
	Height 3
	speed 50
	Damage (137)
	Decal "Scorch"
	Scale 2
	RenderStyle "Add"
	EOA_Projectile.PuffType "GaussCannonProjectilePuff"
	//EOA_Projectile.RipFailChance 4
	+DONTBLAST
	+DONTREFLECT
	+EXTREMEDEATH
	+RIPPER
	States
	{
	Spawn:
		TRAC A 1 Bright
	Wait
	XDeath:
		TNT1 A 0 A_PlaySound("Gauss/Damage", 1)
	Death:
	Crash:
		TNT1 A 1
		{
			A_SpawnItemEx("GaussCannonProjectilePuff", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			A_Explode(13 * !CheckClass("DestroyerbladeProjectile"), 80, 0, 1, 80);
			Radius_Quake(5, 10, 0, 10, 0);
			A_PlaySound("Gauss/Impact", 2);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ADDITIVE, False);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ATTENUATE, False);
		}
		Stop
	}
}

ACTOR DestroyerbladeL3 : EOA_Projectile
{
	Radius 20
	Height 3
	speed 50
	Damage (137)
	Decal "Scorch"
	Scale 2
	RenderStyle "Add"
	EOA_Projectile.PuffType "GaussCannonProjectilePuff"
	//EOA_Projectile.RipFailChance 4
	+DONTBLAST
	+DONTREFLECT
	+EXTREMEDEATH
	+RIPPER
	States
	{
	Spawn:
		TRAC A 1 Bright
	Wait
	XDeath:
		TNT1 A 0 A_PlaySound("Gauss/Damage", 1)
	Death:
	Crash:
		TNT1 A 1
		{
			A_SpawnItemEx("GaussCannonProjectilePuff", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			A_Explode(13 * !CheckClass("DestroyerbladeProjectile"), 80, 0, 1, 80);
			Radius_Quake(5, 10, 0, 10, 0);
			A_PlaySound("Gauss/Impact", 2);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ADDITIVE, False);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ATTENUATE, False);
		}
		Stop
	}
}

ACTOR GaussCannonProjectile2 : EOA_FastProjectile
{
	Radius 5
	Height 5
	//Speed 200
	Damage (320)
	Decal "Scorch"
	Scale 3
	RenderStyle "Add"
	EOA_Projectile.PuffType "GaussCannonProjectilePuff"
	//EOA_Projectile.RipFailChance 4
	+BLOODLESSIMPACT
	+DONTBLAST
	+DONTREFLECT
	+EXTREMEDEATH
	//+FORCERADIUSDMG
	States
	{
	Spawn:
		TRAC A -1 Bright
		Wait
	XDeath:
		TNT1 A 0 A_PlaySound("Gauss/Damage", 1)
	Death:
	Crash:
		TNT1 A 1
		{
			A_Explode(24 * !CheckClass("SiegeModeProjectile"), 80, 0, 1, 80);
			Radius_Quake(5, 10, 0, 10, 0);
			A_PlaySound("Gauss/Impact", 2);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ADDITIVE, False);
			EOA_SpawnCustomDynamicLight("PulseLight", 1, 0.8, 0.1, 128, 0, 10, 1, DYN_ATTENUATE, False);
		}
		Stop
	}
}


ACTOR PrecisionBoltProjectile : GaussCannonProjectile2
{
	Damage (160)
	+FORCERADIUSDMG
	+HITTRACER
	+SEEKERMISSILE
	Var Int User_ReactionTime;
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			A_TransferPointer(AAPTR_TARGET, AAPTR_DEFAULT, AAPTR_PLAYER_GETTARGET, AAPTR_TRACER);
			A_SetUserVar("User_ReactionTime", 36);
		}
		TRAC A 1
		{
			If (A_JumpIfTracerCloser(96, "Null"))
			{
				A_SeekerMissile(90, 0, SMF_PRECISE);
				A_SeekerMissile(90, 0, SMF_PRECISE);
				A_SeekerMissile(90, 0, SMF_PRECISE);
				A_SeekerMissile(90, 0, SMF_PRECISE);
			}
			A_SetUserVar("User_ReactionTime", User_ReactionTime - 1);
			If (User_ReactionTime <= 0)
			{
				Return State ("Explode");
			}
			EOA_SpawnCustomDynamicLight("PointLight", 0.3, 0.6, 1, 16, 0, 1, 1, DYN_ADDITIVE);
			EOA_SpawnCustomDynamicLight("PointLight", 0.3, 0.6, 1, 16, 0, 1, 1, DYN_ATTENUATE);
			Return State ("");
		}
		Wait
	XDeath:
		TNT1 A 0 
		{
			A_Stop;
			A_PlaySound("Precision/ZoomIn", 4, 0.5);
			A_QueueBottomlessMissiles;
			If (User_ReactionTime <= 0) //[DoomKrakken]: In case it didn't get initialized properly.
			{
				A_SetUserVar("User_ReactionTime", 36);
			}
		}
		TRAC A 1 
		{
			A_SetUserVar("User_ReactionTime", User_ReactionTime - 1);
			If (User_ReactionTime <= 0)
			{
				Return State ("Explode");
			}
			A_MicroMissileStick;
			Return State ("");
		}
		Wait
	Death:
		TRAC A 0
		{
			A_Stop;
			A_PlaySound("Precision/ZoomIn", 4, 0.5);
			If (User_ReactionTime <= 0) //[DoomKrakken]: In case it didn't get initialized properly.
			{
				A_SetUserVar("User_ReactionTime", 36);
			}
		}
		TRAC A 1
		{
			A_SetUserVar("User_ReactionTime", User_ReactionTime - 1);
			If (User_ReactionTime <= 0)
			{
				Return State ("Explode");
			}
			Return State ("");
		}
		Wait
	Explode:
		TNT1 A 1
		{
			A_SetScale(0.75);
			A_SpawnItemEx("EOA_RocketExplosion", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERSCALE|SXF_NOCHECKPOSITION);
			A_Stop;
			A_PlaySound("MicroMissile/Explode");
			A_ChangeFlag("EXTREMEDEATH", 1);
			A_Explode(480, 20, XF_HURTSOURCE, 1, 20, 0);
			EOA_SpawnCustomDynamicLight("PulseLight", 0.3, 0.6, 1, 32, 0, 10, 1, DYN_ADDITIVE, False);
			EOA_SpawnCustomDynamicLight("PulseLight", 0.3, 0.6, 1, 32, 0, 10, 1, DYN_ATTENUATE, False);
		}
		Stop
	}
}

ACTOR SiegeModeProjectile : GaussCannonProjectile
{
	Damage (1344)
	Decal "BigScorch"
	Scale 3
	EOA_Projectile.PuffType ""
	+RIPPER
	States
	{
	Spawn:
		/*TRAC A 0 NoDelay 
		{
			A_SpawnItemEx("SiegeWeaveTrail1", 0, 0, 0, 0, 0, 0, 0, SXF_ORIGINATOR|SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH|SXF_SETTRACER);
			A_SpawnItemEx("SiegeWeaveTrail2", 0, 0, 0, 0, 0, 0, 0, SXF_ORIGINATOR|SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH|SXF_SETTRACER);
			A_SpawnItemEx("SiegeWeaveTrail3", 0, 0, 0, 0, 0, 0, 0, SXF_ORIGINATOR|SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH|SXF_SETTRACER);
			A_SpawnItemEx("SiegeWeaveTrail4", 0, 0, 0, 0, 0, 0, 0, SXF_ORIGINATOR|SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH|SXF_SETTRACER);
			A_SpawnItemEx("SiegeWeaveTrail5", 0, 0, 0, 0, 0, 0, 0, SXF_ORIGINATOR|SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH|SXF_SETTRACER);
			A_SpawnItemEx("SiegeWeaveTrail6", 0, 0, 0, 0, 0, 0, 0, SXF_ORIGINATOR|SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH|SXF_SETTRACER);
			A_SpawnItemEx("SiegeWeaveTrail7", 0, 0, 0, 0, 0, 0, 0, SXF_ORIGINATOR|SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH|SXF_SETTRACER);
			A_SpawnItemEx("SiegeWeaveTrail8", 0, 0, 0, 0, 0, 0, 0, SXF_ORIGINATOR|SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH|SXF_SETTRACER);
		}*/
		TRAC A 1 Bright
		{
			A_SpawnItemEx("SiegeModeFX", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			A_SpawnItemEx("SiegeModeFX", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
			A_SpawnItemEx("SiegeModeFX", 0, 0, 0, 0, 0, 0, 0, SXF_TRANSFERPOINTERS|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
		}
		Wait
	Death:
	Crash:
		TNT1 A 0 A_SpawnItemEx("GaussCannonProjectilePuff", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
		Goto Super::Death
	}
}



ACTOR GaussCannonProjectilePuff
{
	+NOINTERACTION
	+CLIENTSIDEONLY
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			A_SpawnItemEx("GaussImpactFX", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			A_SpawnItemEx("GaussImpactFX", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION);
			A_SpawnItemEx("GaussCannonImpactShockWave", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION|SXF_SETTARGET|SXF_ORIGINATOR);
			A_SpawnItemEx("GaussCannonImpactShockWave", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION|SXF_SETTARGET|SXF_ORIGINATOR);
		}
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile("GaussCannonImpactSpark", 5, 0, Random(1, 360), CMF_AIMDIRECTION, random(-45, 90))
		Goto Null
	}
}

ACTOR SiegeModeProjectilePuff : GaussCannonProjectilePuff
{
	States
	{
	Spawn:
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile("GaussCannonImpactSpark", 5, 0, Random(1, 360), CMF_AIMDIRECTION, random(-45, 90)) //[DoomKrakken]: Spawn twice as many sparks. :D
		Goto Super::Spawn
	}
}

ACTOR GaussImpactFX
{
	RenderStyle "Add"
	+NOINTERACTION
	+CLIENTSIDEONLY
	+FORCEXYBILLBOARD
	+NOBLOCKMAP
	+DONTSPLASH
	+THRUACTORS
	+NOTRIGGER
	+NOBLOCKMONST
	+CANNOTPUSH
	Radius 1
	Height 1
	Gravity 0.66
	Scale 0.2
	Alpha 0.99
	Var Int User_LargeScale;
	States
	{
	Spawn:
		BNO2 A 0 NoDelay 
		{
			A_SetRoll(random(0, 359));
			If (CheckClass("SiegeModeProjectile", AAPTR_TARGET))
			{
				User_LargeScale = 1;
				A_SetScale(ScaleX * 1.5);
			}
		}
		BNO2 A 0 A_Jump(256, random(1, 8))
		BNO2 ABCDEFGH 0 A_Jump(256, "Fade")
	Fade:
		"####" "########" 1 Bright A_SetScale(ScaleX * 1.18)
		"####" "#" 1 Bright
		{
			A_SetScale(ScaleX * 1.18);
			A_FadeOut(0.25 / (1 + User_LargeScale));
		}
		Wait
	}
}

ACTOR GaussCannonImpactShockWave
{
	RenderStyle "Add"
	+ROLLSPRITE
	+ROLLCENTER
	+NOINTERACTION
	+CLIENTSIDEONLY
	+FORCEXYBILLBOARD
	+NOBLOCKMAP
	+DONTSPLASH
	+THRUACTORS
	+NOTRIGGER
	+NOBLOCKMONST
	+CANNOTPUSH
	Radius 1
	Height 1
	Gravity 0.66
	Scale 0.2
	Alpha 0.99
	ReactionTime 5
	States
	{
	Spawn:
		BSW2 B 0 NoDelay 
		{
			A_SetRoll(random(0, 359));
		}
		BSW2 B 1 Bright 
		{
			A_SetScale(ScaleX * 1.25);
			A_CountDown;
		}
		Wait
	Death:
		BSW2 B 1 Bright
		{
			A_SetScale(ScaleX * 1.25);
			A_FadeOut(0.25);
		}
		Wait
	}
}

ACTOR GaussCannonImpactSpark
{
	Radius 1
	Height 1
	Scale 0.5
	Translation "0:255=%[0.00,0.00,0.00]:[1.07,1.65,2.00]"
	Gravity 0.33
	Speed 7
	RenderStyle "Add"
	+CLIENTSIDEONLY
	+FORCEXYBILLBOARD
	+NOBLOCKMAP
	+DONTSPLASH
	+THRUACTORS
	+NOTRIGGER
	+NOBLOCKMONST
	+CANNOTPUSH
	+MISSILE 
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			A_ScaleVelocity(frandom(0.75, 1.1));
			A_SetScale(ScaleX * frandom(0.75, 1.2));
		}
		NULL A 3 Bright
	Fade:
		NULL A 1 Bright 
		{
			If (ScaleX <= 0)
			{
				Return State ("Null");
			}
			Else
			{
				A_SetScale(ScaleX - 0.05);
				Return State ("");
			}
		}
		Loop
	}
}

ACTOR VolatileDischargeExplosion
{
	RenderStyle "Add"
	+ROLLSPRITE
	+ROLLCENTER
	+NOINTERACTION
	+CLIENTSIDEONLY
	+FORCEXYBILLBOARD
	+NOBLOCKMAP
	+DONTSPLASH
	+THRUACTORS
	+NOTRIGGER
	+NOBLOCKMONST
	+CANNOTPUSH
	+FORCERADIUSDMG
	//+NODAMAGETHRUST
	//Scale 6
	Alpha 0.99
	Translation "0:255=%[0,0,0]:[0.6,1,1.2]"
	States
	{
	Spawn:
		TNT1 A 0 NoDelay 
		{
			A_SetRoll(random(0, 359));
			A_Explode(320, 192, 0, 1, 192);
			A_SpawnItemEx("VolatileDischargeExplosionFX", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION|SXF_TRANSFERROLL);
			A_SpawnItemEx("VolatileDischargeExplosionFX", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION|SXF_TRANSFERROLL);
		}
		Goto Null
	}
}

ACTOR VolatileDischargeExplosionFX : VolatileDischargeExplosion
{
	States
	{
	Spawn:
		VDXP A 1 Bright NoDelay
		{
			A_SetScale(ScaleX + 0.75);
			A_FadeOut(0.075);
			If (ScaleX >= 6)
			{
				Return State ("Null");
			}
			Else
			{
				Return State ("");
			}
		}
		Wait
	}
}

ACTOR BladeFX
{
	RenderStyle "Add"
	+FLATSPRITE
	+ROLLSPRITE
	+ROLLCENTER
	+NOINTERACTION
	+CLIENTSIDEONLY
	+FORCEXYBILLBOARD
	+NOBLOCKMAP
	+DONTSPLASH
	+THRUACTORS
	+NOTRIGGER
	+NOBLOCKMONST
	+CANNOTPUSH
	+FORCERADIUSDMG
	Translation "112:127=%[0.00,0.00,0.00]:[0.25,1,1]"
	Scale 0.1
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			A_SetPitch(Pitch + 90);
			A_SetRoll(frandom(0, 359));
		}
		SGFX A 1 Bright
		{
			A_FadeOut(0.15);
			A_SetScale(ScaleX + 0.3);
		}
		Wait
	}
}

ACTOR SiegeModeFX
{
	RenderStyle "Add"
	+FLATSPRITE
	+ROLLSPRITE
	+ROLLCENTER
	+NOINTERACTION
	+CLIENTSIDEONLY
	+FORCEXYBILLBOARD
	+NOBLOCKMAP
	+DONTSPLASH
	+THRUACTORS
	+NOTRIGGER
	+NOBLOCKMONST
	+CANNOTPUSH
	+FORCERADIUSDMG
	Translation "112:127=%[0.00,0.00,0.00]:[0.25,1,1]"
	Scale 0.3
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			A_SetPitch(Pitch + 90);
			A_SetRoll(frandom(0, 359));
		}
		SGFX A 1 Bright
		{
			A_FadeOut(0.15);
			A_SetScale(ScaleX + 0.3);
		}
		Wait
	}
}

ACTOR SiegeWeaveTrail1 : EOA_FastProjectile
{
	Radius 0
	Height 0
	MissileHeight 8
	MissileType "SiegeWeaveTrailFX"
	States
	{
	Spawn:
		TNT1 A 1 A_JumpIf(!Tracer, "Null")
		Loop
	Death:
		TNT1 A 0 A_JumpIf(Tracer, "Spawn")
		Stop
	}
}

ACTOR SiegeWeaveTrail2 : SiegeWeaveTrail1{}
ACTOR SiegeWeaveTrail3 : SiegeWeaveTrail1{}
ACTOR SiegeWeaveTrail4 : SiegeWeaveTrail1{}
ACTOR SiegeWeaveTrail5 : SiegeWeaveTrail1{}
ACTOR SiegeWeaveTrail6 : SiegeWeaveTrail1{}
ACTOR SiegeWeaveTrail7 : SiegeWeaveTrail1{}
ACTOR SiegeWeaveTrail8 : SiegeWeaveTrail1{}

ACTOR SiegeWeaveTrailFX
{
	RenderStyle "Add"
	+CLIENTSIDEONLY
	+FORCEXYBILLBOARD
	+NOBLOCKMAP
	+NOGRAVITY
	+DONTSPLASH
	+THRUACTORS
	+NOTRIGGER
	+NOBLOCKMONST
	+CANNOTPUSH
	+MISSILE 
	Radius 1
	Height 1
	//Scale 2
	Translation "0:255=%[0.00,0.00,0.00]:[0.25,1,1]"
	States
	{
	Spawn:
		NULL A 3 Bright
	Fade:
		NULL A 1 Bright
		{
			If (ScaleX <= 0.1)
			{
				Return State ("Null");
			}
			Else
			{
				A_SetScale(ScaleX - 0.33);
				Return State ("");
			}
		}
		Loop
	}
}
